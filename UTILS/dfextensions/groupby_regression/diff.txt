diff --git a/UTILS/dfextensions/groupby_regression/__init__.py b/UTILS/dfextensions/groupby_regression/__init__.py
index 7181efbc..7e38ab19 100644
--- a/UTILS/dfextensions/groupby_regression/__init__.py
+++ b/UTILS/dfextensions/groupby_regression/__init__.py
@@ -18,23 +18,23 @@ See docs/README.md for choosing between implementations.
 """
 
 # Import main classes from modules (will add after files are moved)
-# from .groupby_regression import GroupByRegressor
-# from .groupby_regression_optimized import (
-#     make_parallel_fit_v2,
-#     make_parallel_fit_v3,
-#     make_parallel_fit_v4,
-#     GroupByRegressorOptimized,
-# )
+from .groupby_regression import GroupByRegressor
+from .groupby_regression_optimized import (
+    make_parallel_fit_v2,
+    make_parallel_fit_v3,
+    make_parallel_fit_v4,
+    GroupByRegressorOptimized,
+)
 
 # Version info
 __version__ = '2.0.0'
 __author__ = 'Marian Ivanov'
 
 # Expose at package level (will uncomment after files are moved)
-# __all__ = [
-#     'GroupByRegressor',
-#     'make_parallel_fit_v2',
-#     'make_parallel_fit_v3',
-#     'make_parallel_fit_v4',
-#     'GroupByRegressorOptimized',
-# ]
+__all__ = [
+    'GroupByRegressor',
+    'make_parallel_fit_v2',
+    'make_parallel_fit_v3',
+    'make_parallel_fit_v4',
+    'GroupByRegressorOptimized',
+]
diff --git a/UTILS/dfextensions/groupby_regression/benchmarks/bench_groupby_regression.py b/UTILS/dfextensions/groupby_regression/benchmarks/bench_groupby_regression.py
index e412c781..48c8ecb5 100644
--- a/UTILS/dfextensions/groupby_regression/benchmarks/bench_groupby_regression.py
+++ b/UTILS/dfextensions/groupby_regression/benchmarks/bench_groupby_regression.py
@@ -35,8 +35,8 @@ import pandas as pd
 
 # --- Import the project module ---
 try:
-    import groupby_regression as gr
-    from groupby_regression import GroupByRegressor
+    from .. import groupby_regression as gr
+    from ..groupby_regression import GroupByRegressor
 except Exception as e:
     print("[ERROR] Failed to import groupby_regression.py:", e, file=sys.stderr)
     raise
diff --git a/UTILS/dfextensions/groupby_regression/groupby_regression.py b/UTILS/dfextensions/groupby_regression/groupby_regression.py
index cd4d10c3..b930c69d 100644
--- a/UTILS/dfextensions/groupby_regression/groupby_regression.py
+++ b/UTILS/dfextensions/groupby_regression/groupby_regression.py
@@ -670,3 +670,14 @@ class GroupByRegressor:
         )
         return lines[0]
 
+
+# ============================================================================
+# Aliases for clarity
+# ============================================================================
+
+# Export both "robust" (preferred) and "legacy" (compatibility) names
+#make_parallel_fit_robust = make_parallel_fit
+#make_parallel_fit_legacy = make_parallel_fit
+
+# Note: "legacy" doesn't mean deprecated - this is production-proven code!
+# We use this name to distinguish from "optimized" fast implementations.
diff --git a/UTILS/dfextensions/groupby_regression/tests/test_groupby_regression.py b/UTILS/dfextensions/groupby_regression/tests/test_groupby_regression.py
index 6765cbea..58ca80e9 100644
--- a/UTILS/dfextensions/groupby_regression/tests/test_groupby_regression.py
+++ b/UTILS/dfextensions/groupby_regression/tests/test_groupby_regression.py
@@ -2,7 +2,7 @@ import pytest
 import pandas as pd
 import numpy as np
 #from groupby_regression import GroupByRegressor
-from .groupby_regression import GroupByRegressor
+from ..groupby_regression import GroupByRegressor
 
 @pytest.fixture
 def sample_data():
diff --git a/UTILS/dfextensions/groupby_regression/tests/test_groupby_regression_optimized.py b/UTILS/dfextensions/groupby_regression/tests/test_groupby_regression_optimized.py
index 7a5c536c..e7ebd715 100644
--- a/UTILS/dfextensions/groupby_regression/tests/test_groupby_regression_optimized.py
+++ b/UTILS/dfextensions/groupby_regression/tests/test_groupby_regression_optimized.py
@@ -13,7 +13,7 @@ from pathlib import Path
 
 # Import the optimized implementation
 sys.path.insert(0, str(Path(__file__).parent))
-from groupby_regression_optimized import GroupByRegressorOptimized, make_parallel_fit_v2
+from ..groupby_regression_optimized import GroupByRegressorOptimized, make_parallel_fit_v2
 
 
 @pytest.fixture
@@ -814,7 +814,7 @@ def test_fast_backend_consistency():
     """
     import numpy as np
     import pandas as pd
-    from groupby_regression_optimized import make_parallel_fit_v2, make_parallel_fit_v3
+    from ..groupby_regression_optimized import make_parallel_fit_v2, make_parallel_fit_v3
 
     rng = np.random.default_rng(42)
     n_groups, rows = 20, 8
@@ -877,7 +877,7 @@ def test_numba_backend_consistency():
     """
     import numpy as np
     import pandas as pd
-    from groupby_regression_optimized import (
+    from ..groupby_regression_optimized import (
         make_parallel_fit_v3,
         make_parallel_fit_v4,
     )
@@ -945,7 +945,7 @@ def test_numba_multicol_groupby_v4_matches_v2():
     """
     import numpy as np
     import pandas as pd
-    from groupby_regression_optimized import (
+    from ..groupby_regression_optimized import (
         make_parallel_fit_v2,
         make_parallel_fit_v4,
     )
@@ -1061,7 +1061,7 @@ def test_numba_multicol_weighted_v4_matches_v2():
     """
     import numpy as np
     import pandas as pd
-    from groupby_regression_optimized import make_parallel_fit_v2, make_parallel_fit_v4
+    from ..groupby_regression_optimized import make_parallel_fit_v2, make_parallel_fit_v4
 
     rng = np.random.default_rng(123)
 
@@ -1173,7 +1173,7 @@ def test_numba_diagnostics_v4():
     """
     import numpy as np
     import pandas as pd
-    from groupby_regression_optimized import make_parallel_fit_v2, make_parallel_fit_v4
+    from ..groupby_regression_optimized import make_parallel_fit_v2, make_parallel_fit_v4
 
     print("\n" + "=" * 70)
     print("TEST: Diagnostics (diag=True) - RMS and MAD Computation, v4 vs v2 reference")
@@ -1317,7 +1317,7 @@ def test_numba_diagnostics_v4():
 
 def test_v2_group_rows_not_multiplied_by_targets():
     import numpy as np, pandas as pd
-    from groupby_regression_optimized import make_parallel_fit_v2
+    from ..groupby_regression_optimized import make_parallel_fit_v2
 
     rng = np.random.default_rng(123)
     # 8×7×6 = 336 groups, 5 rows/group
@@ -1370,7 +1370,7 @@ def test_v2_group_rows_not_multiplied_by_targets():
 
 def test_v2_v3_v4_identical_groups_3col():
     import numpy as np, pandas as pd
-    from groupby_regression_optimized import make_parallel_fit_v2, make_parallel_fit_v3, make_parallel_fit_v4
+    from ..groupby_regression_optimized import make_parallel_fit_v2, make_parallel_fit_v3, make_parallel_fit_v4
 
     rng = np.random.default_rng(321)
     xV,yV,zV,rpg = 5,4,3,4
